#pragma once

//! The hand representation mode.

//! HANDS_SEGMENTATION is the default one, doing brightness-based segmentation.
//! SEETHRU is not intended for regular use -- only for comparison.
//! ALTERNATIVE_SEGMENTATION is an experimental mode using colors to segment the hands.
enum class EHandsRepresentationMode { HANDS_SEGMENTATION, SEETHRU, ALTERNATIVE_SEGMENTATION };

// Life cycle management
enum class EInitErrorCode { SUCCESS, FAILURE, NO_CONNECTION, INVALID_SERVER_RESPONSE, ALREADY_CONNECTED };
enum class EAutoAlignForErrorCode { SUCCESS, INIT_REQUIRED, FAILURE, NO_CONNECTION, INVALID_SERVER_RESPONSE };
enum class EShutdownErrorCode { SUCCESS, FAILURE, NO_CONNECTION, INVALID_SERVER_RESPONSE };

// Settings
enum class ESetKeyboardVisibilityErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetHandsVisibilityErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetHandsRepresentationModeErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetHandsColorErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetHandsSegmentationThresholdErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetHandsOpacityErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetAlternativeHandTintOffsetErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class EGetKeyboardStatusErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };
enum class EGetHandsStatusErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };
enum class ESetSkinErrorCode { SUCCESS, INIT_REQUIRED, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };
enum class EGetSupportedKeyboardsErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };

// LED
enum class ESetAllKeysLEDErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };
enum class ESetKeyLEDErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };